{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setAlert","message","setTimeout","Mode","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d22659ea.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a  className=\"nav-link\" href=\"/about\">About{props.aboutText}</a>\r\n        </li> */}\r\n        </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3` }>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable darkMode</label>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!!\",\"success\")\r\n    }\r\n    const handlelowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowerCase!!\",\"success\")\r\n    }\r\n    const handleclearClick=()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Cleared the Content!!\",\"success\")\r\n    }\r\n    const handleCopy=()=>{\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text copied!!\",\"success\")\r\n    }\r\n    const handleExtraSpace=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space have been removed!!\",\"success\")\r\n      \r\n      }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\" on Onchange\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\"style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}  > ToUpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelowClick}  >ToLowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}  >clear</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}  >copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}  >Remove space</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} <b>words</b> and {text.length} <b>characters</b></p>\r\n            <p>{0.008*text.split(\" \").length} <b>minutes read</b></p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                       <strong>{capitalize(props.alert.type)}:{props.alert.msg}</strong> \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n  const [Mode, setMode] = useState('light');\n\n\n  \n const toggleMode= ()=>{\n    if(Mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n  else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n     {/* <Router> */}\n<Navbar title=\"Textutils\" mode={Mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container\">\n \n {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\">  */}\n          <TextForm  showAlert={showAlert} heading=\"Enter the text to analyze\" mode={Mode}/>    \n          {/* </Route>\n        </Switch> */}\n{/* \n<About/> */}\n</div>\n{/* </Router> */}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}